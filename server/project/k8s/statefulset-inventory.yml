apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: inventory-mysql-statefulset
  namespace: inventory-management-system
spec:
  # DNS: <pod-name>.<service-name>.<namespace>.svc.cluster.local
  serviceName: inventory-headless-service # inventory-mysql-0.inventory-headless-service.default.svc.cluster.local
  replicas: 1
  selector:
    matchLabels:
      ims: inventory-mysql
  template:
    metadata:
      labels:
        ims: inventory-mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: inventory-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: inventory-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: inventory-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: inventory-configmap
                  key: MYSQL_DATABASE
          ports:
            - containerPort: 3306
              name: mysql
          volumeMounts:
            - name: mysql-inventory-data
              mountPath: /var/lib/mysql
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 3
  volumeClaimTemplates:
    - metadata:
        name: mysql-inventory-data
      spec:
        # "ReadWriteOnce" means only 1 Pod can read and write to the volume at a time.
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: 500Mi # 500 MB
        # PVC will look for PVs with the same storageClassName to bind to
        storageClassName: ims-storage-class

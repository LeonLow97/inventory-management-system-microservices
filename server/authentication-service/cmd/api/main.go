package main

import (
	"log"

	_ "github.com/golang-migrate/migrate/v4/source/file"
	"github.com/jmoiron/sqlx"

	"github.com/LeonLow97/internal/adapters/outbound"
	"github.com/LeonLow97/internal/core/services"
	"github.com/LeonLow97/internal/pkg/config"
	"github.com/LeonLow97/internal/pkg/consul"
	"github.com/LeonLow97/internal/pkg/db"
	"github.com/LeonLow97/internal/pkg/grpcserver"
)

func main() {
	cfg, err := config.LoadConfig()
	if err != nil {
		log.Fatalln("Failed to load config with error:", err)
	}

	conn, err := db.ConnectToDB(*cfg)
	if err != nil {
		log.Fatalln("Failed to connect to database with error:", err)
	}

	DevTestData(conn)

	// initialize grpc authentication and user services
	repo := outbound.NewRepository(conn)
	service := services.NewService(repo, *cfg)

	app := grpcserver.Application{
		Config:  *cfg,
		Service: service,
	}

	go app.InitiateGRPCServer()

	// register authentication microservice with service discovery consul
	serviceDiscovery := consul.NewConsul(*cfg)
	if err := serviceDiscovery.RegisterService(); err != nil {
		log.Fatalf("failed to register authentication microservice with error: %v\n", err)
	}

	select {}
}

func DevTestData(conn *sqlx.DB) {
	conn.Exec(`
	CREATE TABLE IF NOT EXISTS users (
		id              BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
		email           TEXT                     NOT NULL,
		hashed_password TEXT                     NOT NULL,
		first_name      TEXT                     NOT NULL,
		last_name       TEXT                     NOT NULL,
		active          BOOLEAN                  NOT NULL DEFAULT TRUE,
		updated_at      TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), 
		created_at      TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
	);

	CREATE UNIQUE INDEX idx_users_email ON users(email);

	CREATE TABLE IF NOT EXISTS admin_users (
		user_id         BIGINT                   NOT NULL REFERENCES users(id),
		active          BOOLEAN                  NOT NULL DEFAULT TRUE,     
		updated_at      TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW(), 
		created_at      TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT NOW()
	);

	CREATE UNIQUE INDEX idx_admin_users_user_id ON admin_users(user_id);

	INSERT INTO users (first_name, last_name, hashed_password, email)
	VALUES
		('Jie Wei', 'Low', '$2a$10$OULOXURo57bo5keyNXGQxefqMyEM67JIscqLVKWgd/S.siCqNAHdC', 'lowjiewei@email.com'),
		('Leon', 'Low', '$2a$10$OULOXURo57bo5keyNXGQxefqMyEM67JIscqLVKWgd/S.siCqNAHdC', 'leonlow@email.com');
	`)

	log.Println("Inserted dev data!")
}
